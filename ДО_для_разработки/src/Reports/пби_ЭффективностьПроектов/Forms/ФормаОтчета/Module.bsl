
&НаСервере
Процедура СформироватьНаСервере(ТД)
	ТД.Очистить();
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет"); 
	
	Если Вариант = 0 Тогда
		Схема = ОтчетОбъект.ПолучитьМакет("Проекты");
	Иначе
		Схема = ОтчетОбъект.ПолучитьМакет("Сотрудники");
	КонецЕсли;	
	
	КомпоновщикНастроекНастройки = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроекНастройки.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Схема));
	КомпоновщикНастроекНастройки.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию); 
	
	КомпоновщикНастроекНастройки.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НачалоПериода", Период.ДатаНачала);
	КомпоновщикНастроекНастройки.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("КонецПериода", КонецДня(Период.ДатаОкончания));
	КомпоновщикНастроекНастройки.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ОтборПоПроекту", ЗначениеЗаполнено(Проект));
	КомпоновщикНастроекНастройки.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Проект", Проект);
	КомпоновщикНастроекНастройки.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Статья", Статья);

	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(Схема, КомпоновщикНастроекНастройки.Настройки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных; 
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ТЗ = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТЗ);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	МесяцевВПериоде = Месяц(Период.ДатаОкончания) - Месяц(Период.ДатаНачала) + 1;
	Макет = ОтчетОбъект.ПолучитьМакет("Макет");
	ПоПроектам = Ложь;
	Если Вариант = 0 Тогда
		ПоПроектам = Истина;
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьСерая = Макет.ПолучитьОбласть("Серая");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	Иначе
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка1");
		ОбластьСерая = Макет.ПолучитьОбласть("Серая1");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка1");
	КонецЕсли;
	
	Отборы = "Вид отчета: " + ?(Вариант = 0, "по проектам", "по сотрудникам") + "; ";
	Отборы = Отборы + "период: " + ПредставлениеПериода(Период.ДатаНачала, Период.ДатаОкончания);
	Если ЗначениеЗаполнено(Проект) Тогда
		Отборы = Отборы + "; проект: " + Проект;
	КонецЕсли;
	ОбластьШапка.Параметры.Отборы = Отборы;
	ТД.Вывести(ОбластьШапка);
	
	Если ПоПроектам Тогда
		ЧасыСРеализацией = 0;
		ОбщаяРеализация = 0;
		ТД.НачатьАвтогруппировкуСтрок();
		
		//сч = ТЗ.Количество() - 1;
		//Пока сч >= 0 Цикл
		//	стр = ТЗ[сч];
		//	Если стр.Подразделение <> Неопределено Тогда
		//		ТЗ.Удалить(сч);
		//	КонецЕсли;
		//	сч = сч - 1;
		//КонецЦикла;
		//ТЗ.Удалить(ТЗ.Количество() - 1);
		
		Для каждого стр из ТЗ Цикл
			Если стр.Проект <> Неопределено и Не ЗначениеЗаполнено(стр.Пользователь) и ЗначениеЗаполнено(стр.Реализация) Тогда
				ЧасыСРеализацией = ЧасыСРеализацией + стр.Часы;
				ОбщаяРеализация = ОбщаяРеализация + стр.Реализация;
			КонецЕсли;
		КонецЦикла;
		
		Для каждого стр из ТЗ Цикл
			Если ЗначениеЗаполнено(стр.Пользователь) Тогда
				ОбластьСтрока.Параметры.Затраты = стр.Часы;
				ОбластьСтрока.Параметры.Сотрудник = стр.Пользователь;
				ОбластьСтрока.Параметры.Реализация = стр.Реализация;
				ТД.Вывести(ОбластьСтрока, 1);
			Иначе
				Если стр.Проект <> Неопределено Тогда
					Если ПоПроектам Тогда
						ОбластьСерая.Параметры.Проект = ?(ЗначениеЗаполнено(стр.Проект), стр.Проект, "Проект не заполнен");
						ОбластьСерая.Параметры.Затраты = стр.Часы;
						ОбластьСерая.Параметры.Реализация = стр.Реализация;
						Если стр.Реализация = 0 Тогда
							ОбластьСерая.Параметры.СредняяСтоимость = "";
							ОбластьСерая.Параметры.ДоляПроектаВЧасах = "";
							ОбластьСерая.Параметры.ДоляПроектаВАктах = "";
							ОбластьСерая.Параметры.Отклонение = "";
						Иначе
							ОбластьСерая.Параметры.СредняяСтоимость = Частное(стр.Реализация, стр.Часы);
							ОбластьСерая.Параметры.ДоляПроектаВЧасах = 100 * Частное(стр.Часы, ЧасыСРеализацией);
							ОбластьСерая.Параметры.ДоляПроектаВАктах = 100 * Частное(стр.Реализация, ОбщаяРеализация);
							ОбластьСерая.Параметры.Отклонение = 100 * (Частное(стр.Реализация, ОбщаяРеализация) - Частное(стр.Часы, ЧасыСРеализацией));
						КонецЕсли;
						ТД.Вывести(ОбластьСерая, 0);
					КонецЕсли;	
				Иначе
					ОбластьСерая.Параметры.Проект = "ИТОГО";
					ОбластьСерая.Параметры.Затраты = стр.Часы;
					ОбластьСерая.Параметры.Реализация = "";
					ОбластьСерая.Параметры.СредняяСтоимость = "";
					ОбластьСерая.Параметры.ДоляПроектаВЧасах = "";
					ОбластьСерая.Параметры.ДоляПроектаВАктах = "";
					ОбластьСерая.Параметры.Отклонение = "";
					ТД.Вывести(ОбластьСерая, 0);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		ОбластьСерая.Параметры.Проект = "ИТОГО по реализациям";
		ОбластьСерая.Параметры.Затраты = ЧасыСРеализацией;
		ОбластьСерая.Параметры.Реализация = ОбщаяРеализация;
		ОбластьСерая.Параметры.СредняяСтоимость = Частное(ОбщаяРеализация, ЧасыСРеализацией);
		ОбластьСерая.Параметры.ДоляПроектаВЧасах = 100;
		ОбластьСерая.Параметры.ДоляПроектаВАктах = 100;
		ОбластьСерая.Параметры.Отклонение = "";
		ТД.Вывести(ОбластьСерая, 0);
		ТД.ЗакончитьАвтогруппировкуСтрок();
		ТД.ПоказатьУровеньГруппировокСтрок(0);
	Иначе
		//сч = ТЗ.Количество() - 1;
		//Пока сч >= 0 Цикл
		//	стр = ТЗ[сч];
		//	Если стр.Пользователь = Неопределено и стр.Проект <> Неопределено Тогда
		//		ТЗ.Удалить(сч);
		//	КонецЕсли;
		//	сч = сч - 1;
		//КонецЦикла;
		//ТЗ.Свернуть("Пользователь", "Часы, Реализация");
		Для каждого стр из ТЗ Цикл
			Если ЗначениеЗаполнено(стр.Пользователь) Тогда
				ОбластьСтрока.Параметры.Затраты = стр.Часы;
				ОбластьСтрока.Параметры.Сотрудник = стр.Пользователь;
				ОбластьСтрока.Параметры.Реализация = стр.Реализация;
				ОбластьСтрока.Параметры.СредняяЭффективностьЗаЧас = Частное(стр.Реализация, стр.Часы);
				ОбластьСтрока.Параметры.СредняяЭффективностьЗаМесяц = Частное(стр.Реализация, МесяцевВПериоде);
				ТД.Вывести(ОбластьСтрока);
			Иначе
				Если стр.Подразделение = Неопределено Тогда
					ОбластьСерая.Параметры.Проект = "ИТОГО";
				Иначе
					ОбластьСерая.Параметры.Проект = стр.Подразделение;
				КонецЕсли;	
				ОбластьСерая.Параметры.Затраты = стр.Часы;
				ОбластьСерая.Параметры.Реализация = стр.Реализация;
				ОбластьСерая.Параметры.СредняяЭффективностьЗаЧас = Частное(стр.Реализация, стр.Часы);
				ОбластьСерая.Параметры.СредняяЭффективностьЗаМесяц = Частное(стр.Реализация, МесяцевВПериоде);
				ТД.Вывести(ОбластьСерая);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция Частное(А, Б)
	Если Б = 0 Тогда
		Возврат 0;
	Иначе
		Возврат А/Б;
	КонецЕсли;
КонецФункции	

&НаКлиенте
Процедура Сформировать(Команда)
	Если Не ЗначениеЗаполнено(Период.ДатаНачала) или Не ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
		Предупреждение("Необходимо выбрать период формирования отчета");
		Возврат;
	КонецЕсли;
	ТД.ФиксацияСверху = 6;
	СформироватьНаСервере(ТД);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ЗначениеЗаполнено(Период.ДатаНачала) Тогда
		Период.ДатаНачала = НачалоГода(ТекущаяДата());
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
		Период.ДатаОкончания = КонецМесяца(ДобавитьМесяц(НачалоМесяца(ТекущаяДата()), -1));
	КонецЕсли;
	Элементы.ТД.ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.НеИспользовать;
	Элементы.ТД.ОтображениеСостояния.Видимость = Ложь;
КонецПроцедуры
